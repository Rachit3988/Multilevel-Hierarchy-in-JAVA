package Multiple_Hierarchy;

//Extends BoxWeight to shipping costs

//Start with box
class Box {
	private double width;
	private double height;
	private double length;
	
	//construct clone of an object
	Box(Box ob) { //pass object to constructor
		width = ob.width;
		height = ob.height;
		length = ob.length;
	}
	
	//constructor use when all dimensions are specified
	Box(double w, double l, double h) {
		width = w;
		height = h;
		length = l;
	}
	
	//constructor use when no dimension specified
	Box() {
		width = -1;
		height = -1;
		length = -1;
	}
	
	//constructor use when cube is created 
	Box(double len) {
		width = height = length = len;
	}
	
	//compute and return volume
	double volume() {
		return width*height*length;
	}
}

//Add weight.
class BoxWeight extends Box {
	
	double weight; //weight of box.
	
	// construct clone of an object
	BoxWeight(BoxWeight ob) {
		super(ob);
		weight = ob.weight;
	}
	
	// constructor when all parameters are specified.
	BoxWeight(double w, double h, double l, double m) {
		super(w,h,l);
		weight = m;
	}
	
	// default constructor
	BoxWeight() {
		super();
		weight = -1;
	}
	
	// constructor use when cube is created.
	BoxWeight(double len, double m) {
		super(len);
		weight = m;
	}
}

//Add shipping costs
class Shipment extends BoxWeight {
	
	double cost; //cost of box
	
	// construct clone of an object
	Shipment(Shipment ob) {
		super(ob);
		cost = ob.cost;
	}
	
	// construct when all parameters are specified
	Shipment(double w, double h, double l, double m, double c) {
		super(w,h,l,m);
		cost = c;
	}
	
	//construct when no parameters are specified 
	Shipment() {
		super();
		cost = -1;
	}
	
	// construct when cube is created
	Shipment(double len, double m, double c) {
		super(len, m);
		cost = c;
	}
}


public class Multilevel_Hierarchy {

	public static void main(String[] args) {
		
		
		Shipment ship1 = new Shipment(10, 20, 30, 20, 10);
		Shipment ship2 = new Shipment(20, 50, 30, 80, 30);
		
		double vol;
		
		vol = ship1.volume();
		System.out.println("Volume of ship1 is : " + vol);
		System.out.println("Weight of box of ship1 is : " + ship1.weight);
		System.out.println("Cost of box of ship1 is : " + ship1.cost);
		
		System.out.println();
		System.out.println();
		
		vol = ship2.volume();
		System.out.println("Volume of ship1 is : " + vol);
		System.out.println("Weight of box of ship2 is : " + ship2.weight);
		System.out.println("Cost of box of ship2 is : " + ship2.cost);
	}

}


